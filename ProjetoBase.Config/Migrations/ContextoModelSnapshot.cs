// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoBase.Config.Infra;

#nullable disable

namespace ProjetoBase.Config.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoBase.Model.Cliente", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DS_EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_CLIENTE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("Seguranca.Model.Funcao", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_FUNCAO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CO_FUNCAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("DS_FUNCAO");

                    b.Property<int?>("IdFuncaoPai")
                        .HasColumnType("int")
                        .HasColumnName("ID_FUNCAO_PAI");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int")
                        .HasColumnName("ID_MODULO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_FUNCAO");

                    b.Property<short>("Ordem")
                        .HasColumnType("smallint")
                        .HasColumnName("NU_ORDEM");

                    b.Property<int>("Permissao")
                        .HasColumnType("int")
                        .HasColumnName("TP_PERMISSAO");

                    b.Property<string>("Rota")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("DS_ROTA");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.Property<int>("Visibilidade")
                        .HasColumnType("int")
                        .HasColumnName("TP_VISIBILIDADE");

                    b.HasKey("Id");

                    b.HasIndex("IdFuncaoPai");

                    b.HasIndex("IdModulo");

                    b.ToTable("FUNCAO", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.Modulo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MODULO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CO_MODULO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("DS_MODULO");

                    b.Property<int>("IdSistema")
                        .HasColumnType("int")
                        .HasColumnName("ID_SISTEMA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_MODULO");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.HasKey("Id");

                    b.HasIndex("IdSistema");

                    b.ToTable("MODULO", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.Perfil", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CO_PERFIL");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("DS_PERFIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_PERFIL");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.HasKey("Id");

                    b.ToTable("PERFIL", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.PerfilFuncao", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL_FUNCAO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<bool>("Alterar")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ALTERAR");

                    b.Property<bool>("Consultar")
                        .HasColumnType("bit")
                        .HasColumnName("FL_CONSULTAR");

                    b.Property<bool>("Excluir")
                        .HasColumnType("bit")
                        .HasColumnName("FL_EXCLUIR");

                    b.Property<int>("IdFuncao")
                        .HasColumnType("int")
                        .HasColumnName("ID_FUNCAO");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL");

                    b.Property<bool>("Inserir")
                        .HasColumnType("bit")
                        .HasColumnName("FL_INSERIR");

                    b.Property<bool>("Visualizar")
                        .HasColumnType("bit")
                        .HasColumnName("FL_VISUALIZAR");

                    b.HasKey("Id");

                    b.HasIndex("IdFuncao");

                    b.HasIndex("IdPerfil");

                    b.ToTable("PERFIL_FUNCAO", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.PerfilUsuario", b =>
                {
                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL")
                        .HasColumnOrder(1);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnOrder(2);

                    b.HasKey("IdPerfil", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PERFIL_USUARIO", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.Sistema", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SISTEMA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CO_SISTEMA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("DS_SISTEMA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_SISTEMA");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.HasKey("Id");

                    b.ToTable("SISTEMA", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.Usuario", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit")
                        .HasColumnName("FL_BLOQUEADO");

                    b.Property<DateTime>("DataSenha")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_SENHA");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_LOGIN");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NM_USUARIO");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_SENHA");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.HasKey("Id");

                    b.ToTable("USUARIO", "Seguranca");
                });

            modelBuilder.Entity("Seguranca.Model.Funcao", b =>
                {
                    b.HasOne("Seguranca.Model.Funcao", "FuncaoPai")
                        .WithMany()
                        .HasForeignKey("IdFuncaoPai");

                    b.HasOne("Seguranca.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuncaoPai");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("Seguranca.Model.Modulo", b =>
                {
                    b.HasOne("Seguranca.Model.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("IdSistema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("Seguranca.Model.PerfilFuncao", b =>
                {
                    b.HasOne("Seguranca.Model.Funcao", "Funcao")
                        .WithMany("Perfil")
                        .HasForeignKey("IdFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seguranca.Model.Perfil", "Perfil")
                        .WithMany("Permissoes")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Seguranca.Model.PerfilUsuario", b =>
                {
                    b.HasOne("Seguranca.Model.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seguranca.Model.Usuario", "Usuario")
                        .WithMany("Perfil")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Seguranca.Model.Funcao", b =>
                {
                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Seguranca.Model.Perfil", b =>
                {
                    b.Navigation("Permissoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Seguranca.Model.Usuario", b =>
                {
                    b.Navigation("Perfil");
                });
#pragma warning restore 612, 618
        }
    }
}
